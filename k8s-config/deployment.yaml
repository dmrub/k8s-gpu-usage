---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-gpu-usage-service-account
  namespace: kube-utils
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: "k8s-gpu-usage-role"
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "k8s-gpu-usage-role-bind"
subjects:
- kind: ServiceAccount
  name: k8s-gpu-usage-service-account
  namespace: kube-utils
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "k8s-gpu-usage-role"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: k8s-gpu-usage
  name: k8s-gpu-usage
  namespace: kube-utils
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: k8s-gpu-usage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: k8s-gpu-usage
  name: k8s-gpu-usage
  namespace: kube-utils
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-gpu-usage
  template:
    metadata:
      labels:
        app: k8s-gpu-usage
    spec:
      serviceAccountName: k8s-gpu-usage-service-account
      containers:
      - name: k8s-gpu-usage
        image: ghcr.io/dmrub/k8s-gpu-usage:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
